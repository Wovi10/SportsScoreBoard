@using SportsScoreBoard.Components.Shared
@using SportsScoreBoard.Models
<MudStack Spacing="6">
    <MudContainer Class="pa-0 ma-0">
        <MudText Typo="Typo.h1" Align="Align.Center">@Title</MudText>
    </MudContainer>
    <MudGrid Class="mx-0 px-0">
        <MudItem xs="12" Class="ma-0 pa-0">
            <Timer @ref="_timer"
                   IsVisible="@Game.Settings.ShowTimer"/>
        </MudItem>
    </MudGrid>
    <MudGrid Class="ma-0 pa-0">
        <MudItem xs="6" Class="ma-0 pa-0">
            <HomeScorePart
                Game="@Game"
                Settings="@Game.Settings"
                Team="@Game.Home"
                Points="@Game.Score.HomePoints"
                Sets="@Game.Score.HomeSets"
                IncrementScore="IncrementHome"
                DecrementScore="DecrementHome"
                ChangeTeamName="HomeNameChanged"/>
        </MudItem>
        <MudItem xs="6" Class="ma-0 pa-0">
            <AwayScorePart
                Game="@Game"
                Settings="@Game.Settings"
                Team="@Game.Away"
                Points="@Game.Score.AwayPoints"
                Sets="@Game.Score.AwaySets"
                IncrementScore="IncrementAway"
                DecrementScore="DecrementAway"
                ChangeTeamName="AwayNameChanged"/>
        </MudItem>
        <MudItem xs="12" Class="ma-0 pa-0">
            <PreviousSetScores IsVisible="Game.Settings.ShowPreviousSets" SettingsBase="Game.Settings" SetScores="Game.Score.SetScores"/>
        </MudItem>
    </MudGrid>
</MudStack>

@code {
    [Parameter] public required string Title { get; set; }
    [Parameter] public required SportsGameBase Game { get; set; }
    [Parameter] public required EventCallback<int> IncrementHome { get; set; }
    [Parameter] public required EventCallback<int> IncrementAway { get; set; }
    [Parameter] public required EventCallback<int> DecrementAway { get; set; }
    [Parameter] public required EventCallback<int> DecrementHome { get; set; }
    [Parameter] public required EventCallback<string> HomeNameChanged { get; set; }
    [Parameter] public required EventCallback<string> AwayNameChanged { get; set; }

    private Timer _timer;

    public void ResetTimer()
        => _timer.ResetTimer();

    public void RefreshMe()
        => StateHasChanged();
}