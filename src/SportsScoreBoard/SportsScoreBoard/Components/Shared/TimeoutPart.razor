@if (IsVisible)
{
    <MudContainer @onclick="OnTimeoutsClicked"
                  Class="d-flex mx-0 px-0"
                  Style="@Style">
        @switch (Timeouts)
        {
            case 2:
                <MudIcon Icon="@Icons.Material.Filled.Circle"/>
                <MudIcon Icon="@Icons.Material.Filled.Circle"/>
                break;
            case 1:
                <MudIcon Icon="@Icons.Material.Filled.Circle"/>
                <MudIcon Icon="@Icons.Material.Outlined.Circle"/>
                break;
            default:
                <MudIcon Icon="@Icons.Material.Outlined.Circle"/>
                <MudIcon Icon="@Icons.Material.Outlined.Circle"/>
                break;
        }
    </MudContainer>
}

@code {

    [Parameter] public required bool IsVisible { get; set; }
    [Parameter] public required string Style { get; set; }
    [Parameter] public required int Timeouts { get; set; }
    [Parameter] public required EventCallback TimeoutsClicked { get; set; }

    private int _timeoutCount = 0;

    private async Task OnTimeoutsClicked()
        => await TimeoutsClicked.InvokeAsync();
    
}