@if (IsVisible)
{
    <div class="d-flex" style="@(IsHome ? "justify-content: flex-end" : "justify-content: flex-start")">
        <MudIconButton Icon="@Icons.Material.Filled.RemoveCircle" OnClick="OnDecrementScoreClick" Disabled="@(Score <= 0)"/>
        <MudIconButton Icon="@Icons.Material.Filled.AddCircle" OnClick="OnScoredClick"/>
    </div>
}

@code
{
    [Parameter] public required bool IsVisible { get; set; }
    [Parameter] public required bool IsHome { get; set; }
    [Parameter] public required int Score { get; set; }
    [Parameter] public required EventCallback IncrementScore { get; set; }
    [Parameter] public required EventCallback DecrementScore { get; set; }
    
    private async Task OnScoredClick()
        => await IncrementScore.InvokeAsync();
    
    private async Task OnDecrementScoreClick()
        => await DecrementScore.InvokeAsync();
}
