@if (IsVisible)
{
    <MudStack Class="my-2">
        @foreach(var amount in IncrementAmounts)
        {
            <MudContainer Class="d-flex" Style="@(IsHome ? "justify-content: flex-end" : "justify-content: flex-start")">
                <MudButton OnClick="() => DecrementScore.InvokeAsync(amount)"
                           Variant="Variant.Filled"
                           Color="Color.Primary"
                           Disabled="Score < amount"
                           Class="mx-1">
                    -@amount
                </MudButton>
                <MudButton OnClick="() => IncrementScore.InvokeAsync(amount)"
                           Variant="Variant.Filled"
                           Color="Color.Primary">
                    +@amount
                </MudButton>
            </MudContainer>
        }
    </MudStack>
}

@code
{
    [Parameter] public required bool IsVisible { get; set; }
    [Parameter] public required bool IsHome { get; set; }
    [Parameter] public required int Score { get; set; }
    [Parameter] public required int[] IncrementAmounts { get; set; }
    [Parameter] public required EventCallback<int> IncrementScore { get; set; }
    [Parameter] public required EventCallback<int> DecrementScore { get; set; }
    
    private async Task OnScoredClick(int amount)
        => await IncrementScore.InvokeAsync(amount);
    
    private async Task OnDecrementScoreClick(int amount)
        => await DecrementScore.InvokeAsync(amount);
}
