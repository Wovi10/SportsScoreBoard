@using MudBlazor.Utilities
@using SportsScoreBoard.Models.Volleyball
@using SportsScoreBoard.Components.Shared
@using SportsScoreBoard.Models
<MudStack Row="true" Wrap="Wrap.Wrap" Class="mb-3">
    <ColorPicker FieldLabel="Home background"
                 ColourChanged="OnHomeColorChanged"
                 Colour="HomeColors.Background"/>
    <ColorPicker FieldLabel="Home text"
                 ColourChanged="OnHomeTextColorChanged"
                 Colour="HomeColors.Foreground"/>
    <ColorPicker FieldLabel="Away background"
                 ColourChanged="OnAwayColorChanged"
                 Colour="AwayColors.Background"/>
    <ColorPicker FieldLabel="Away text"
                 ColourChanged="OnAwayTextColorChanged"
                 Colour="AwayColors.Foreground"/>
    <SettingsButton OnClick="OnResetColorsClick" Text="Reset colours" />
</MudStack>

@code {
    [Parameter] public required VolleyballGame Game { get; set; }
    [Parameter] public required EventCallback ResetColors { get; set; }
    [Parameter] public required EventCallback<MudColor> HomeColorChanged { get; set; }
    [Parameter] public required EventCallback<MudColor> AwayColorChanged { get; set; }
    [Parameter] public required EventCallback<MudColor> HomeTextColorChanged { get; set; }
    [Parameter] public required EventCallback<MudColor> AwayTextColorChanged { get; set; }

    private ColorPair HomeColors => Game.Home.Colors;
    private ColorPair AwayColors => Game.Away.Colors;

    private async Task OnHomeColorChanged(MudColor mudColor)
        => await HomeColorChanged.InvokeAsync(mudColor);

    private async Task OnAwayColorChanged(MudColor mudColor)
        => await AwayColorChanged.InvokeAsync(mudColor);

    private async Task OnHomeTextColorChanged(MudColor mudColor)
        => await HomeTextColorChanged.InvokeAsync(mudColor);

    private async Task OnAwayTextColorChanged(MudColor mudColor)
        => await AwayTextColorChanged.InvokeAsync(mudColor);

    private async Task OnResetColorsClick(MouseEventArgs obj)
        => await ResetColors.InvokeAsync();

}