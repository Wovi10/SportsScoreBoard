@using SportsScoreBoard.Components.Pages.Sports.VolleyballComponents.ScoreComponents.Shared
@using SportsScoreBoard.Models.Volleyball
<div>
    <MudCard @onclick="OnScoredClick" Class="m-0 p-0">
        <MudCardContent Style="@BackgroundStyle">
            <MudStack>
                <ScoreText Score="Score"
                           ColorStyle="@ForegroundColorStyle"/>
                <ServingIcon IsHome="Team.IsHome"
                             IsVisible="Team.IsServing && Settings.ShowServing"
                             ColorStyle="@ForegroundColorStyle"/>
            </MudStack>
        </MudCardContent>
    </MudCard>
    @if (Settings.ShowManualScoring)
    {
        <ManualScoring Score="Score"
                       IncrementScore="OnScoredClick"
                       DecrementScore="OnDecrementScoreClick"
                       IsHome="Team.IsHome"/>
    }
</div>

@code{

    [Parameter] public required EventCallback IncrementScore { get; set; }
    [Parameter] public required EventCallback DecrementScore { get; set; }
    [Parameter] public required VolleyballTeam Team { get; set; }
    [Parameter] public required VolleyballSettings Settings { get; set; }
    [Parameter] public required int Score { get; set; }

    private bool BackgroundColorIsSet => Team.Colors.Background is not null;
    private string BackgroundStyle => BackgroundColorIsSet ? $"background-color: {Team.Colors.Background}" : string.Empty;
    private bool ForegroundColorIsSet => Team.Colors.Foreground is not null;
    private string ForegroundColorStyle => ForegroundColorIsSet ? $"color: {Team.Colors.Foreground}" : string.Empty;

    private async Task OnScoredClick()
        => await IncrementScore.InvokeAsync();
    
    private async Task OnDecrementScoreClick()
        => await DecrementScore.InvokeAsync();

}