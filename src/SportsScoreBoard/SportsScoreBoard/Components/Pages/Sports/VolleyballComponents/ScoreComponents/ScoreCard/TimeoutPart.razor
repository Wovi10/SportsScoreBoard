@using SportsScoreBoard.Models.Volleyball
@if (ShowTimeouts)
{
    <MudContainer @onclick="OnTimeoutsClicked"
                  Class="d-flex mx-0 px-0"
                  Style="@(Team.IsHome ? "justify-content: flex-end" : "flex-start")">
        @switch (Team.Timeouts)
        {
            case 2:
                <MudIcon Icon="@Icons.Material.Filled.Circle"></MudIcon>
                <MudIcon Icon="@Icons.Material.Filled.Circle"></MudIcon>
                break;
            case 1:
                <MudIcon Icon="@Icons.Material.Filled.Circle"></MudIcon>
                <MudIcon Icon="@Icons.Material.Outlined.Circle"></MudIcon>
                break;
            default:
                <MudIcon Icon="@Icons.Material.Outlined.Circle"></MudIcon>
                <MudIcon Icon="@Icons.Material.Outlined.Circle"></MudIcon>
                break;
        }
    </MudContainer>
}

@code
{
    [Parameter] public required VolleyballTeam Team { get; set; }
    [Parameter] public required bool ShowTimeouts { get; set; }
    [Parameter] public required EventCallback TimeoutsClicked { get; set; }

    private int _timeoutCount = 0;

    private async Task OnTimeoutsClicked()
        => await TimeoutsClicked.InvokeAsync();
}
