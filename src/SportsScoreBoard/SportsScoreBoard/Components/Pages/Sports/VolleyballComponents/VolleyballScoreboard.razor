@using SportsScoreBoard.Components.Pages.Sports.VolleyballComponents.ScoreComponents.ScoreCard
@using SportsScoreBoard.Models.Volleyball
@using SportsScoreBoard.Components.Shared
@using SportsScoreBoard.Components.Pages.Sports.VolleyballComponents.ScoreComponents
@rendermode InteractiveServer

<MudStack Spacing="6">
    <MudText Typo="Typo.h1" Align="Align.Center">Volleyball</MudText>
    <MudGrid Class="mx-0 px-0">
        <MudItem xs="12" Class="ma-0 pa-0">
            <Timer @ref="_volleyballTimer"
                   Settings="@Game.Settings" />
        </MudItem>
    </MudGrid>
    <MudGrid Class="ma-0 pa-0">
        <MudItem xs="6" Class="ma-0 pa-0">
            <HomeScorePart
                GameSettings="@Game.Settings"
                Team="@Game.Home"
                Score="@Game.Score.HomePoints"
                Sets="@Game.Score.HomeSets"
                IncrementScore="IncrementHome"
                DecrementScore="DecrementHome"
                ChangeTeamName="HomeNameChanged"/>
        </MudItem>
        <MudItem xs="6" Class="ma-0 pa-0">
            <AwayScorePart
                GameSettings="@Game.Settings"
                Team="@Game.Away"
                Score="@Game.Score.AwayPoints"
                Sets="@Game.Score.AwaySets"
                IncrementScore="IncrementAway"
                DecrementScore="DecrementAway"
                ChangeTeamName="AwayNameChanged"
            />
        </MudItem>
        <MudItem xs="12" Class="ma-0 pa-0">
            <PreviousSetScores Settings="Game.Settings" SetScores="Game.Score.SetScores"/>
        </MudItem>
    </MudGrid>
</MudStack>

@code
{
    [Parameter] public required VolleyballGame Game { get; set; }
    [Parameter] public required EventCallback IncrementHome { get; set; }
    [Parameter] public required EventCallback IncrementAway { get; set; }
    [Parameter] public required EventCallback DecrementAway { get; set; }
    [Parameter] public required EventCallback DecrementHome { get; set; }
    [Parameter] public required EventCallback<string> HomeNameChanged { get; set; }
    [Parameter] public required EventCallback<string> AwayNameChanged { get; set; }
    private Timer _volleyballTimer;

    public void ResetTimer()
        => _volleyballTimer.ResetTimer();

    public void RefreshMe()
        => StateHasChanged();
}
